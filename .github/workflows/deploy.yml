name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    types: [ closed ]
    branches: [ main ]

jobs:
  test-and-deploy:
    runs-on: ubuntu-latest
    
    # Only run deployment if PR is merged to main
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.merged == true)
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: 'package-lock.json'
        
    - name: Install dependencies
      run: |
        npm ci
        
    - name: Run tests (if available)
      run: |
        npm test
      continue-on-error: true
      
    - name: Deploy to Render
      env:
        RENDER_TOKEN: ${{ secrets.RENDER_TOKEN }}
        RENDER_SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID }}
      run: |
        echo "üöÄ Starting deployment to Render..."
        
        # Trigger Render deployment via API
        response=$(curl -s -w "%{http_code}" -X POST "https://api.render.com/v1/services/$RENDER_SERVICE_ID/deploys" \
          -H "Authorization: Bearer $RENDER_TOKEN" \
          -H "Content-Type: application/json" \
          -d '{"clearCache": "do_not_clear"}')
        
        # Extract status code and response body
        http_code="${response: -3}"
        response_body="${response%???}"
        
        if [ "$http_code" -eq 201 ]; then
          echo "‚úÖ Deployment triggered successfully!"
          echo "Response: $response_body"
        else
          echo "‚ùå Deployment failed with status code: $http_code"
          echo "Response: $response_body"
          exit 1
        fi
        
    - name: Deployment Status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "üéâ Deployment completed successfully!"
        else
          echo "üí• Deployment failed!"
        fi 